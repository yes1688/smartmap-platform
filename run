#!/bin/bash
# 智慧空間平台 - 統一管理工具
# 用途：一個腳本管理所有環境

set -e

# 顏色
G='\033[0;32m'
Y='\033[1;33m'
R='\033[0;31m'
B='\033[0;36m'
NC='\033[0m'

# 顯示 Logo
show_logo() {
    echo -e "${B}"
    cat << "EOF"
    _____ __  __    _    ____ _____ __  __    _    ____
   / ____|  \/  |  / \  |  _ \_   _|  \/  |  / \  |  _ \
   \___ \| |\/| | / _ \ | |_) || | | |\/| | / _ \ | |_) |
    ___) | |  | |/ ___ \|  _ < | | | |  | |/ ___ \|  __/
   |____/|_|  |_/_/   \_\_| \_\|_| |_|  |_/_/   \_\_|

   智慧空間平台 - Intelligent Spatial Platform
EOF
    echo -e "${NC}"
}

# 顯示幫助
show_help() {
    show_logo
    cat << EOF
${G}使用方式:${NC} ./run [command]

${Y}🔧 開發環境 (熱重載)${NC}
  ${G}dev${NC}         啟動開發環境
  ${G}dev-stop${NC}    停止開發環境
  ${G}dev-logs${NC}    查看開發環境日誌

${Y}🚀 生產環境${NC}
  ${G}prod${NC}        啟動生產環境
  ${G}prod-stop${NC}   停止生產環境
  ${G}prod-logs${NC}   查看生產環境日誌

${Y}🛠️ 工具指令${NC}
  ${G}build${NC}       構建前端資源
  ${G}test-run${NC}    運行後端測試
  ${G}shell${NC}       進入後端容器
  ${G}db${NC}          進入數據庫
  ${G}status${NC}      查看所有環境狀態
  ${G}clean${NC}       清理所有容器和資源

${Y}📚 範例${NC}
  ./run dev          # 本機開發（最常用）
  ./run prod         # 生產環境
  ./run build        # 構建前端
  ./run test-run     # 運行測試

${Y}📍 訪問地址${NC}
  ${B}統一端口: http://localhost:7004${NC}
  （開發和生產環境都使用相同端口）

EOF
}

# 開發環境
dev_start() {
    echo -e "${G}🔧 啟動開發環境（熱重載）...${NC}"
    podman-compose -f podman-compose.dev.yml up -d
    echo -e "${G}✅ 開發環境已啟動${NC}"
    echo -e "${B}訪問: http://localhost:7004${NC}"
}

dev_stop() {
    echo -e "${Y}⏹️  停止開發環境...${NC}"
    podman-compose -f podman-compose.dev.yml down
    echo -e "${G}✅ 已停止${NC}"
}

dev_logs() {
    podman-compose -f podman-compose.dev.yml logs -f
}

# 生產環境
prod_start() {
    echo -e "${G}🚀 啟動生產環境...${NC}"

    # 檢查 .env
    if [ ! -f .env ]; then
        echo -e "${Y}⚠️  .env 不存在，從 .env.example 複製...${NC}"
        cp .env.example .env
    fi

    # 構建前端
    echo -e "${G}📦 構建前端...${NC}"
    cd web && npm run build && cd .. || { echo -e "${R}❌ 前端構建失敗${NC}"; exit 1; }

    # 啟動容器
    podman-compose --profile prod up -d

    echo -e "${G}✅ 生產環境已啟動${NC}"
    echo -e "${B}訪問: http://localhost:7004${NC}"
    echo -e "${Y}💡 等待 30 秒讓服務完全啟動...${NC}"
}

prod_stop() {
    echo -e "${Y}⏹️  停止生產環境...${NC}"
    podman-compose --profile prod down
    echo -e "${G}✅ 已停止${NC}"
}

prod_logs() {
    podman-compose --profile prod logs -f
}

# 工具指令
build_frontend() {
    echo -e "${G}📦 構建前端資源...${NC}"
    cd web && npm install && npm run build && cd ..
    echo -e "${G}✅ 前端構建完成${NC}"
}

run_tests() {
    echo -e "${G}🧪 運行後端測試...${NC}"

    # 檢查開發環境是否運行
    if ! podman ps | grep -q spatial-backend-dev; then
        echo -e "${Y}開發環境未運行，啟動中...${NC}"
        dev_start
        sleep 10
    fi

    podman exec spatial-backend-dev go test ./internal/... -v -cover
}

enter_shell() {
    # 優先開發環境
    if podman ps | grep -q spatial-backend-dev; then
        echo -e "${G}🐚 進入開發環境後端容器...${NC}"
        podman exec -it spatial-backend-dev /bin/sh
    elif podman ps | grep -q spatial-app; then
        echo -e "${G}🐚 進入生產環境後端容器...${NC}"
        podman exec -it spatial-app /bin/sh
    else
        echo -e "${R}❌ 沒有運行中的後端容器${NC}"
        exit 1
    fi
}

enter_db() {
    # 優先開發環境
    if podman ps | grep -q spatial-postgres-dev; then
        echo -e "${G}🗄️  進入開發環境數據庫...${NC}"
        podman exec -it spatial-postgres-dev psql -U spatial_user -d spatial_db
    elif podman ps | grep -q spatial-postgres; then
        echo -e "${G}🗄️  進入生產環境數據庫...${NC}"
        podman exec -it spatial-postgres psql -U spatial_user -d spatial_db
    else
        echo -e "${R}❌ 沒有運行中的數據庫容器${NC}"
        exit 1
    fi
}

show_status() {
    echo -e "${G}📊 環境狀態:${NC}\n"

    echo -e "${Y}開發環境:${NC}"
    podman ps --filter "name=spatial.*-dev" --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}" || echo "未運行"

    echo -e "\n${Y}生產環境:${NC}"
    podman ps --filter "name=spatial-(app|nginx|postgres)" --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}" || echo "未運行"
}

clean_all() {
    echo -e "${R}🧹 清理所有環境...${NC}"
    echo -e "${Y}⚠️  這將刪除所有容器、網絡和數據卷${NC}"
    read -p "確定要繼續嗎？(y/N): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        podman-compose -f podman-compose.dev.yml down -v 2>/dev/null || true
        podman-compose --profile prod down -v 2>/dev/null || true
        echo -e "${G}✅ 清理完成${NC}"
    fi
}

# 主函數
main() {
    case "${1:-help}" in
        # 開發環境
        dev)
            dev_start
            ;;
        dev-stop)
            dev_stop
            ;;
        dev-logs)
            dev_logs
            ;;

        # 生產環境
        prod)
            prod_start
            ;;
        prod-stop)
            prod_stop
            ;;
        prod-logs)
            prod_logs
            ;;

        # 工具
        build)
            build_frontend
            ;;
        test-run)
            run_tests
            ;;
        shell)
            enter_shell
            ;;
        db)
            enter_db
            ;;
        status)
            show_status
            ;;
        clean)
            clean_all
            ;;

        # 幫助
        help|--help|-h|*)
            show_help
            ;;
    esac
}

main "$@"
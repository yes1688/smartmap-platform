import { TypeInfo } from '../reflect/info';
export declare const VectorTypeSize: {
    vec2: number;
    vec2f: number;
    vec2i: number;
    vec2u: number;
    vec2b: number;
    vec2h: number;
    vec3: number;
    vec3f: number;
    vec3i: number;
    vec3u: number;
    vec3b: number;
    vec3h: number;
    vec4: number;
    vec4f: number;
    vec4i: number;
    vec4u: number;
    vec4b: number;
    vec4h: number;
};
export declare const MatrixTypeSize: {
    mat2x2: number[];
    mat2x2f: number[];
    mat2x2h: number[];
    mat2x3: number[];
    mat2x3f: number[];
    mat2x3h: number[];
    mat2x4: number[];
    mat2x4f: number[];
    mat2x4h: number[];
    mat3x2: number[];
    mat3x2f: number[];
    mat3x2h: number[];
    mat3x3: number[];
    mat3x3f: number[];
    mat3x3h: number[];
    mat3x4: number[];
    mat3x4f: number[];
    mat3x4h: number[];
    mat4x2: number[];
    mat4x2f: number[];
    mat4x2h: number[];
    mat4x3: number[];
    mat4x3f: number[];
    mat4x3h: number[];
    mat4x4: number[];
    mat4x4f: number[];
    mat4x4h: number[];
};
export declare const MatrixTransposeType: {
    mat2x2: string;
    mat2x2f: string;
    mat2x2h: string;
    mat2x3: string;
    mat2x3f: string;
    mat2x3h: string;
    mat2x4: string;
    mat2x4f: string;
    mat2x4h: string;
    mat3x2: string;
    mat3x2f: string;
    mat3x2h: string;
    mat3x3: string;
    mat3x3f: string;
    mat3x3h: string;
    mat3x4: string;
    mat3x4f: string;
    mat3x4h: string;
    mat4x2: string;
    mat4x2f: string;
    mat4x2h: string;
    mat4x3: string;
    mat4x3f: string;
    mat4x3h: string;
    mat4x4: string;
    mat4x4f: string;
    mat4x4h: string;
};
export declare function matrixTranspose(matrix: number[], t: TypeInfo): number[];
export declare function matrixMultiply(matrixA: number[], t1: TypeInfo, matrixB: number[], t2: TypeInfo): number[] | null;
export declare function matrixVectorMultiply(matrix: number[], t1: TypeInfo, vector: number[], t2: TypeInfo): number[] | null;
export declare function vectorMatrixMultiply(vector: number[], t1: TypeInfo, matrix: number[], t2: TypeInfo): number[] | null;
